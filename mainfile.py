import telebot
import sqlite3
from datetime import datetime
from telebot import types
import threading

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot("6984068979:AAEw5WSw-AC7qYcAr4IjiNe6dfNshMCBcYk")

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect('users.db', check_same_thread=False)
cursor = conn.cursor()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
cursor.execute('''
    CREATE TABLE IF NOT EXISTS users (
        user_id INTEGER PRIMARY KEY,
        username TEXT,
        registration_date TEXT,
        participation_count INTEGER
    )
''')
conn.commit()

# Mutex –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–∞–∑–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤
db_lock = threading.Lock()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = message.from_user.id
    with db_lock:
        cursor.execute('SELECT * FROM users WHERE user_id=?', (user_id,))
        user_data = cursor.fetchone()
    if user_data:
        show_profile(message)
    else:
        markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
        register_button = types.KeyboardButton("üéÆ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
        markup.add(register_button)
        bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.", reply_markup=markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"
@bot.message_handler(func=lambda message: message.text == "üéÆ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
def register(message):
    user_id = message.from_user.id
    with db_lock:
        cursor.execute('SELECT * FROM users WHERE user_id=?', (user_id,))
        user_data = cursor.fetchone()
        if not user_data:
            username = message.from_user.username
            registration_date = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            cursor.execute('INSERT INTO users (user_id, username, registration_date, participation_count) VALUES (?, ?, ?, ?)',
                           (user_id, username, registration_date, 0))
            conn.commit()
            bot.reply_to(message, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! üéâ")
            hide_registration_button(message.chat.id, message.message_id)
            show_profile_button(message.chat.id)
        else:
            bot.reply_to(message, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. üïπÔ∏è")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"
@bot.message_handler(func=lambda message: message.text == "üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
def show_profile(message):
    user_id = message.from_user.id
    with db_lock:
        cursor.execute('SELECT * FROM users WHERE user_id=?', (user_id,))
        user_data = cursor.fetchone()
    if user_data:
        user_info = user_data
        profile_text = (
            f"üÜî ID: {user_info[0]}\n"
            f"üë§ Username: @{user_info[1]}\n"
            f"üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {user_info[2]}\n"
            f"üéÆ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–∏–π –≤ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö: {user_info[3]}"
        )
        bot.reply_to(message, profile_text)
    else:
        bot.reply_to(message, "–í—ã –µ—â–µ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'.")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"
def show_profile_button(chat_id):
    markup = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
    profile_button = types.KeyboardButton("üìÇ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    markup.add(profile_button)
    bot.send_message(chat_id, "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å. üéÆ", reply_markup=markup)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è"
def hide_registration_button(chat_id, message_id):
    bot.delete_message(chat_id, message_id)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()

# –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞
conn.close()
